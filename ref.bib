% This file was created with JabRef 2.7b.
% Encoding: UTF-8

@INPROCEEDINGS{cowan98,
  author = {C. Cowan and others},
  title = {StackGuard: Automatic Adaptive Detection and Prevention of Buffer-Overflow
	Attacks},
  booktitle = {Proceedings of the 7th USENIX Security Symposium},
  year = {1998},
  owner = {mavi},
  review = {First paper on the stack guard implementation on unix. Explains how
	it works: Writing a known string after the SFP on the stack in the
	prologue and check if it is still the same in the epilogue.},
  timestamp = {2013.04.03}
}

@ARTICLE{dupuis11,
  author = {M. Dupuis and others},
  title = {Top-down mandates and the need for organizational governance, risk
	management, and compliance in China: A discussion},
  journal = {China-USA Business Review},
  year = {2011},
  volume = {10},
  pages = {319-335},
  owner = {mavi},
  review = {Why are GRC frameworks amazing? Why should they be implemented even
	in China? The need for the GRC framework 
	
	as articulated here is significant. It is a dynamic process that respects
	the cultural values of the Chinese people while 
	
	allowing for real improvement in governance, risk management, and
	compliance. These improvements can serve to 
	
	not only be profitable for the organizations in which they are implemented,
	but also prove beneficial for the Chinese 
	
	government, partner organizations.},
  timestamp = {2013.04.01}
}

@INPROCEEDINGS{Egners12,
  author = {A. Egners and others},
  title = {Messing with Android's Permission Model},
  booktitle = {2012 IEEE 11th International Conference on Trust, Security and Privacy
	in Computing and Communications},
  year = {2012},
  pages = {505-514},
  organization = {RWTH Aachen University},
  owner = {mavi},
  review = {Good paper on a collection of attacks which lead to a full device
	access scenario. The part about bidirectional communication with
	the Internet without permission is of special interest. It has been
	introduced by this paper. Quite interesting is the disribtion of
	the zimperlich rooting exploit.},
  timestamp = {2013.04.10}
}

@INPROCEEDINGS{endicott06,
  author = {B. Endicott-Popovsky and D. Frincke},
  title = {Adding the Fourth "R": A Systems Approach to Solving the Hacker's
	Arms Race},
  booktitle = {Proceedings of the 2006 Symposium 39th Hawaii International Conference
	on System Sciences},
  year = {2006},
  owner = {mavi},
  review = {Describing the arms race between hackers and victims as a stable system
	to identify an overcome. Suggesting the equation f which gives the
	hackers motivation: M=f[P(v) - (c1+c2)] After evaluationg all parameters
	it seems to be most efficient to increase C2 (consequences), since
	there are almost no consequences for hackers yet. That can be done
	by adding a fourth R to the 3R's model: Resistence, Recognition,
	Recovery + Redress. This changes the aim of what should happen after
	an incident. Beside recovering the system and applying patches it
	is important to first of all gather legal evidences and finally to
	prosecute the hackers.},
  timestamp = {2013.04.16}
}

@ARTICLE{endicott07,
  author = {B. Endicott-Popovsky and others},
  title = {A Theoretical Framework for Organizational 
	
	Network Forensic Readiness},
  journal = {JOURNAL OF COMPUTERS},
  year = {2007},
  volume = {2},
  pages = {5-11},
  owner = {mavi},
  review = {Evaluates the radiness of networks for gaining forensic evidence to
	pursue intruders. Therefore two real world cases are described. It
	argues that most networks don't allow by default to gain relevant
	forensic evidence without causing significant costs or loss of operational
	time. One suggested solution is Network Forensic Readiness (NFR),
	essentially embedding forensic capabilities in networks, minimizing
	the reliance on highly skilled and trained individuals while maximizing
	the ability to collect forensically sound information. 
	
	Forensic readiness proposes that systems be designed or enabled to
	capture forensic evidence beyond their current capabilities. The
	idea has been endorsed within the forensics research community, but
	its implementation has yet to be realized beyond individual tools.},
  timestamp = {2013.03.23}
}

@TECHREPORT{fahl13,
  author = {S. Fahl and others},
  title = {Hey, You, Get Off of My Clipboard},
  institution = {Leibniz University of Hannover},
  year = {2013},
  owner = {mavi},
  review = {Die Idee ist die Implementierung einer App die auf einen Call-Back
	des Clipboards lauscht, um dann zu schauen ob die gerade aktive App
	ein Passwort-Manager ist. Das geschieht über die PID die sich auf
	die Google-App-ID abbilden lässt. Danach schauen sie welche a) App
	als nächstes aktiv wird oder b) falls es ein Browser ist, welche
	TCP Sockets offen sind.
	
	Ja, gut. Es ist jetzt wenig überraschend das sowas funktioniert. Auch
	wenn das Android SDK sogar eine extra Schnittstelle bietet ist es
	klar, das alle Daten die im Speicher liegen auch theoretisch Abgegriffen
	werden können.
	
	Weiterhin kann auch nicht genau den Vorteil von Desktop-Lösungen erkennen,
	die native APIs verwenden (vermutlich meinen sie Browser nativ).
	Das Problem bleibt letztlich das Gleiche. Alles was irgendwann mal
	im Speicher landet, kann auch von Malware abgeriffen werden. Ob es
	wirklich WinAPI-Methode zur besseren Integration von Passwörtern
	gibt weiß ich nicht, müsste man wohl mal mit Rene sprechen.
	
	
	Sie beschwören immer wieder das sie für ihre gesamten Aktionen keine
	Permissions benötigen. Naja gut, wie viele Paper in dem Bereich ist
	der vermeintliche Einbruchsweg der Play Store. Ich bin nicht sicher
	wie groß das Risiko in der Praxis ist.
	
	
	Beim Ausnutzen einer Browserlücke ist immer noch die Sandbox zu überwinden.
	Root Rechte sind dann auch nicht mehr weit.
	
	
	Dem folgend würde ich die praktische Sicherheit ihrer Lösung (Softkeyboard)
	nicht höher einschätzen als Copy & Paste zu benutzen. Als Root kommt
	man auch an ihren Speicher.
	
	
	Für eine genauere Analyse müsste man sie aber deren App mal genauer
	anschauen.},
  timestamp = {2013.03.27}
}

@ARTICLE{herath09,
  author = {T. Herath and H. R. Rao},
  title = {Protection motivation and deterrence: a framework for security policy
	compliance in organisations},
  journal = {European Journal of Information Systems},
  year = {2009},
  volume = {18},
  pages = {106–125},
  owner = {mavi},
  review = {Business guys bla bla. Could not read the entire paper. Created a
	model how to get people to follow policies. Motivation seems to be
	the key.},
  timestamp = {2013.03.27}
}

@ARTICLE{luo11,
  author = {X. R. Luo and others},
  title = {Social Engineering: The Neglected Human Factor for Information Security
	Management},
  journal = {Information Resources Management Journal},
  year = {2011},
  volume = {24},
  pages = {1-8},
  owner = {mavi},
  review = {Nice paper on Social Engineering (SE). Gives a theoretical background
	on phsycologie. Gives some examples. The solution is the awareness
	of the stuff in several different manners.},
  timestamp = {2013.03.27}
}

@ARTICLE{Rivest78,
  author = {R. Rivest and others},
  title = {A Method for Obtaining Digital Signatures and Public-Key Cryptosystems},
  journal = {Communications of ACM},
  year = {1978},
  volume = {21},
  pages = {120-126},
  owner = {mavi},
  timestamp = {2013.04.16}
}

@TECHREPORT{stewin12,
  author = {P. Stewin and I. Bystrov},
  title = {Understanding DMA Malware},
  institution = {Technische Universität Berlin},
  year = {2012},
  owner = {mavi},
  timestamp = {2013.03.05}
}


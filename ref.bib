% This file was created with JabRef 2.7b.
% Encoding: UTF-8

@ARTICLE{Endicott07,
  author = {B. Endicott-Popovsky and others},
  title = {A Theoretical Framework for Organizational 
	
	Network Forensic Readiness},
  journal = {JOURNAL OF COMPUTERS},
  year = {2007},
  volume = {2},
  owner = {mavi},
  review = {Evaluates the radiness of networks for gaining forensic evidence to
	pursue intruders. Therefore two real world cases are described. It
	argues that most networks don't allow by default to gain relevant
	forensic evidence without causing significant costs or loss of operational
	time. One suggested solution is Network Forensic Readiness (NFR),
	essentially embedding forensic capabilities in networks, minimizing
	the reliance on highly skilled and trained individuals while maximizing
	the ability to collect forensically sound information. 
	
	Forensic readiness proposes that systems be designed or enabled to
	capture forensic evidence beyond their current capabilities. The
	idea has been endorsed within the forensics research community, but
	its implementation has yet to be realized beyond individual tools.},
  timestamp = {2013.03.23}
}

@TECHREPORT{Fahl13,
  author = {S. Fahl and others},
  title = {Hey, You, Get Off of My Clipboard},
  institution = {Leibniz University of Hannover},
  year = {2013},
  owner = {mavi},
  review = {Die Idee ist die Implementierung einer App die auf einen Call-Back
	des Clipboards lauscht, um dann zu schauen ob die gerade aktive App
	ein Passwort-Manager ist. Das geschieht über die PID die sich auf
	die Google-App-ID abbilden lässt. Danach schauen sie welche a) App
	als nächstes aktiv wird oder b) falls es ein Browser ist, welche
	TCP Sockets offen sind.
	
	Ja, gut. Es ist jetzt wenig überraschend das sowas funktioniert. Auch
	wenn das Android SDK sogar eine extra Schnittstelle bietet ist es
	klar, das alle Daten die im Speicher liegen auch theoretisch Abgegriffen
	werden können.
	
	Weiterhin kann auch nicht genau den Vorteil von Desktop-Lösungen erkennen,
	die native APIs verwenden (vermutlich meinen sie Browser nativ).
	Das Problem bleibt letztlich das Gleiche. Alles was irgendwann mal
	im Speicher landet, kann auch von Malware abgeriffen werden. Ob es
	wirklich WinAPI-Methode zur besseren Integration von Passwörtern
	gibt weiß ich nicht, müsste man wohl mal mit Rene sprechen.
	
	
	Sie beschwören immer wieder das sie für ihre gesamten Aktionen keine
	Permissions benötigen. Naja gut, wie viele Paper in dem Bereich ist
	der vermeintliche Einbruchsweg der Play Store. Ich bin nicht sicher
	wie groß das Risiko in der Praxis ist.
	
	
	Beim Ausnutzen einer Browserlücke ist immer noch die Sandbox zu überwinden.
	Root Rechte sind dann auch nicht mehr weit.
	
	
	Dem folgend würde ich die praktische Sicherheit ihrer Lösung (Softkeyboard)
	nicht höher einschätzen als Copy & Paste zu benutzen. Als Root kommt
	man auch an ihren Speicher.
	
	
	Für eine genauere Analyse müsste man sie aber deren App mal genauer
	anschauen.},
  timestamp = {2013.03.27}
}

@TECHREPORT{Stewin12,
  author = {P. Stewin and I. Bystrov},
  title = {Understanding DMA Malware},
  institution = {Technische Universität Berlin},
  year = {2012},
  owner = {mavi},
  timestamp = {2013.03.05}
}

